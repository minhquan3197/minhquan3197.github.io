{"version":3,"sources":["components/home/Skills.jsx","components/home/Profile.jsx","components/home/Project.jsx","components/home/Experience.jsx","components/home/Home.jsx","redux/actions/index.js","components/blog/Blog.jsx","redux/actions/blogActions.js","components/blog/Detail.jsx","components/global/GlobalLayout.jsx","routes.js","components/layouts/Header.jsx","components/layouts/Sidebar.jsx","components/layouts/Menu.jsx","components/global/GlobalRoute.jsx","redux/reducers/blogReducer.js","redux/reducers/index.js","config/requestService.js","redux/services/blogService.js","redux/services/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","Text","Skills","level","style","marginTop","strokeColor","percent","status","Meta","Card","Profile","cover","alt","src","title","description","listData","content","image","Project","itemLayout","size","pagination","pageSize","dataSource","renderItem","item","Item","key","extra","width","TabPane","Tabs","Experience","defaultActiveKey","tab","Home","xs","sm","md","lg","xl","paddingRight","GET_BLOGS","GET_BLOG","SET_BLOGS","SET_BLOG","Blog","props","useState","page","dispatch","useDispatch","data","blogs","skeleton","index","push","paddingBottom","height","avatar","active","useEffect","type","types","getBlogs","products","map","_id","to","pathname","className","name","borderRadius","moment","createdAt","format","connect","state","Paragraph","Detail","blog","id","match","params","html","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paddingTop","dangerouslySetInnerHTML","__html","Content","Layout","AOS","init","duration","GeneralLayout","data-aos","children","routes","path","exact","main","layout","GlobalLayout","Header","onClick","collapsed","background","padding","Sider","SubMenu","Menu","Sidebar","value","setValue","trigger","collapsible","mode","margin","visible","setVisible","placement","closable","onClose","GlobalRoute","Component","component","rest","render","initialState","loading","combineReducers","action","payload","SERVER_URL","get","subUrl","axios","fetchBlogs","blogDetailWatcher","fetchBlog","blogWatcher","blogSaga","RequestService","result","put","console","log","response","actionChannel","subChannel","take","call","all","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","rootReducer","compose","applyMiddleware","run","App","setCollapsed","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","length","route","showContent","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5214b343.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Progress, Typography } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Skills\r\n            </Title>\r\n            <div>\r\n                <Title level={4}>Programming Language</Title>\r\n                <Text>JavaScript</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={75}\r\n                    status=\"active\"\r\n                />\r\n                <Text>TypeScript</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={55}\r\n                    status=\"active\"\r\n                />\r\n                <Text>PHP</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={50}\r\n                    status=\"active\"\r\n                />\r\n                <Text>HTML/CSS</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={30}\r\n                    status=\"active\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Title level={4}>Framework & Library</Title>\r\n                <Text>Nest.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={40}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Laravel</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={76}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Express.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={50}\r\n                    status=\"active\"\r\n                />\r\n                <Text>React.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={43}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Jest.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={20}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Mocha.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={30}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Chai.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={5}\r\n                    status=\"active\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\nconst Profile = () => {\r\n    return (\r\n        <>\r\n            <Card\r\n                cover={\r\n                    <img\r\n                        alt=\"Quân Nguyễn\"\r\n                        src=\"https://res.cloudinary.com/kori/image/upload/v1547055160/me.jpg\"\r\n                    />\r\n                }\r\n            >\r\n                <Meta title=\"Nguyễn Minh Quân\" />\r\n                <Meta description=\"Node.js Developer\" />\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Typography, List } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst listData = [\r\n    {\r\n        title: 'Plansmart',\r\n        description: 'Back-end Developer',\r\n        content:\r\n            'Scrum methodology, clear and optimize code, Flow analytics, GIT Flow, Beginning AWS Lambda, Build core 40%',\r\n        image:\r\n            'https://res.cloudinary.com/kori/image/upload/v1580148600/projects/plantsmart.png',\r\n    },\r\n    {\r\n        title: 'Thế Giới Thợ',\r\n        description: 'Back-end Developer',\r\n        content: 'Maintain and do new feature, Firebase push notification',\r\n        image:\r\n            'https://res.cloudinary.com/kori/image/upload/v1580148601/projects/thegioitho.png',\r\n    },\r\n];\r\n\r\nconst Project = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Projects\r\n            </Title>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                    pageSize: 3,\r\n                }}\r\n                dataSource={listData}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        key={item.title}\r\n                        extra={<img width={125} alt=\"logo\" src={item.image} />}\r\n                    >\r\n                        <List.Item.Meta\r\n                            title={item.title}\r\n                            description={item.description}\r\n                        />\r\n                        {item.content}\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default Project;\r\n","import React from 'react';\r\nimport { Tabs, Timeline } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\nconst Experience = () => {\r\n    return (\r\n        <>\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Education\" key=\"1\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <b>Ho Chi Minh University of Technology</b>\r\n                            <p>Faculty of Information Technology</p>\r\n                            <p>2016 – 2020</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <b>KhoaPham Training Center</b>\r\n                            <p>Course: MEAN Stack & PHP/Laravel</p>\r\n                            <p>2017 - 2018</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </TabPane>\r\n                <TabPane tab=\"Experience\" key=\"2\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <b>Vitop Media</b>\r\n                            <p>Junior NodeJS Developer</p>\r\n                            <p>9/2019 – 2/2020</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <b>GMV Tech</b>\r\n                            <p>Fresher Laravel Developer</p>\r\n                            <p>7/2018 – 10/2018</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    );\r\n};\r\nexport default Experience;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Skills from './Skills';\r\nimport Profile from './Profile';\r\nimport Project from './Project';\r\nimport Experience from './Experience';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col\r\n                    xs={24}\r\n                    sm={24}\r\n                    md={12}\r\n                    lg={8}\r\n                    xl={4}\r\n                    style={{ paddingRight: 10 }}\r\n                >\r\n                    <div>\r\n                        <Profile />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Skills />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={16} xl={20}>\r\n                    <div>\r\n                        <Experience />\r\n                    </div>\r\n                    <div>\r\n                        <Project />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Home;\r\n","//Actions\r\nexport const GET_BLOGS = 'GET_BLOGS';\r\nexport const GET_BLOG = 'GET_BLOG';\r\n\r\n//Saga\r\nexport const SET_BLOGS = 'SET_BLOGS';\r\nexport const SET_BLOG = 'SET_BLOG';\r\nexport const BLOGS_LOADING = 'BLOGS_LOADING';","import React, { useState, useEffect } from 'react';\r\nimport { Typography, Row, Col, Card, Skeleton } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { getBlogs } from '../../redux/actions/blogActions';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nlet Blog = props => {\r\n    const [page] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const data = props.blogs.blogs;\r\n\r\n    const skeleton = [];\r\n\r\n    for (let index = 0; index < 8; index++) {\r\n        skeleton.push(\r\n            <Col\r\n                xs={24}\r\n                sm={24}\r\n                md={6}\r\n                lg={6}\r\n                xl={6}\r\n                style={{ paddingRight: 10, paddingBottom: 10 }}\r\n                key={index}\r\n            >\r\n                <Card style={{ height: 345 }}>\r\n                    <Skeleton avatar active>\r\n                        <Meta title=\"Card title\" />\r\n                    </Skeleton>\r\n                </Card>\r\n            </Col>,\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlogs(page));\r\n    }, [page, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Title level={2}>Quan Nguyen Blog</Title>\r\n            <Row>\r\n                {data.products\r\n                    ? data.products.map(data => (\r\n                          <Col\r\n                              xs={24}\r\n                              sm={24}\r\n                              md={6}\r\n                              lg={6}\r\n                              xl={6}\r\n                              style={{ paddingRight: 10, paddingBottom: 10 }}\r\n                              key={data._id}\r\n                          >\r\n                              <Link to={{ pathname: `/blogs/${data._id}` }}>\r\n                                  <Card\r\n                                      className=\"blog-card\"\r\n                                      cover={\r\n                                          <img\r\n                                              alt={data.name}\r\n                                              src={data.image}\r\n                                          />\r\n                                      }\r\n                                      style={{ height: 345, borderRadius: 20 }}\r\n                                  >\r\n                                      <Meta\r\n                                          title={data.name}\r\n                                          description={\r\n                                              'Ngày tạo ' +\r\n                                              moment(data.createdAt).format(\r\n                                                  'DD-MM-YYYY',\r\n                                              )\r\n                                          }\r\n                                      />\r\n                                  </Card>\r\n                              </Link>\r\n                          </Col>\r\n                      ))\r\n                    : skeleton}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nBlog.propTypes = {\r\n    blogs: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    blogs: state.blogs,\r\n});\r\n\r\nBlog = connect(mapStateToProps, null)(Blog);\r\n\r\nexport default Blog;\r\n","import * as types from '.';\r\n\r\nexport const getBlogs = (page) => ({\r\n    type: types.GET_BLOGS, page\r\n})\r\n\r\nexport function getBlog(id) {\r\n    return { type: types.GET_BLOG, id }\r\n}","import React, { useEffect } from 'react';\r\nimport { Typography, Skeleton, Button, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { getBlog } from '../../redux/actions/blogActions';\r\nimport { Link } from 'react-router-dom';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nlet Detail = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const data = props.blog.blog;\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlog(props.match.params.id));\r\n    }, [props.match.params.id, dispatch]);\r\n\r\n    const createMarkup = html => {\r\n        return { __html: html };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data ? (\r\n                <>\r\n                    <Title level={2}>{data.name}</Title>\r\n                    <div\r\n                        className=\"image-cover\"\r\n                        style={{\r\n                            backgroundImage: `url(${data.image})`,\r\n                            backgroundRepeat: 'no-repeat',\r\n                            backgroundSize: 'cover',\r\n                            backgroundPosition: 'center',\r\n                        }}\r\n                    ></div>\r\n                    <Paragraph style={{ paddingTop: 50 }}>\r\n                        <div\r\n                            dangerouslySetInnerHTML={createMarkup(data.content)}\r\n                        />\r\n                    </Paragraph>              \r\n                </>\r\n            ) : (\r\n                <Skeleton />\r\n            )}\r\n            <hr/>\r\n            <Link to=\"/blogs\">\r\n                <Button className=\"fixed-button\" type=\"primary\">\r\n                    <Icon type=\"left\" />\r\n                    Go back\r\n                </Button>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nDetail.propTypes = {\r\n    blog: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    blog: state.blogs,\r\n});\r\n\r\nDetail = connect(mapStateToProps, null)(Detail);\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport AOS from 'aos';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout;\r\nAOS.init({\r\n    duration: 1000,\r\n});\r\n\r\nconst GeneralLayout = props => {\r\n    return (\r\n        <>\r\n            <Content className=\"content\" data-aos=\"fade-left\">\r\n                {props.children}\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeneralLayout;\r\n","import Home from './components/home/Home';\r\nimport Blog from './components/blog/Blog';\r\nimport Detail from './components/blog/Detail';\r\n// Layout\r\nimport GlobalLayout from './components/global/GlobalLayout';\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: Home,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/blogs\",\r\n        exact: true,\r\n        main: Blog,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/blogs/:id\",\r\n        exact: true,\r\n        main: Detail,\r\n        layout: GlobalLayout,\r\n    }\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { Layout, Icon } from 'antd';\r\n\r\nconst Header = ({ onClick, collapsed, width }) => {\r\n    return (\r\n        <>\r\n            <Layout.Header style={{ background: '#fff', padding: 0 }}>\r\n                {width > 470 ? (\r\n                    <Icon\r\n                        className=\"trigger\"\r\n                        type={collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                        onClick={onClick}\r\n                    />\r\n                ) : null}\r\n            </Layout.Header>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst Sidebar = ({ collapsed }) => {\r\n    const [value, setValue] = useState(true);\r\n    useEffect(() => {\r\n        setValue(collapsed);\r\n    }, [collapsed]);\r\n\r\n    return (\r\n        <>\r\n            <Sider trigger={null} collapsible collapsed={value}>\r\n                <div className=\"logo\">\r\n                    {value ? (\r\n                        <p className=\"logo__text\">K0r1</p>\r\n                    ) : (\r\n                        <p className=\"logo__text\">Quân Nguyễn</p>\r\n                    )}\r\n                </div>\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    style={{\r\n                        borderRadius: 20,\r\n                        width: '90%',\r\n                        margin: 'auto',\r\n                    }}\r\n                >\r\n                    <SubMenu\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"home\" />\r\n                                <span>Home</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"idcard\" />\r\n                                Profile\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Link to=\"/blogs\">\r\n                                <Icon type=\"read\" />\r\n                                Blogs\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"appstore\" />\r\n                                <span>Project</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"message\" />\r\n                                Chat App\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n        </>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport { Drawer, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = () => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={showDrawer}\r\n                style={{ background: '#001529' }}\r\n            >\r\n                Nguyễn Minh Quân\r\n            </Button>\r\n            <Drawer\r\n                title=\"Menu\"\r\n                placement=\"top\"\r\n                closable={false}\r\n                onClose={onClose}\r\n                visible={visible}\r\n            >\r\n                <p>\r\n                    <Link to=\"/\">Profile</Link>\r\n                </p>\r\n                <p>\r\n                    <Link to=\"/blogs\">Blogs</Link>\r\n                </p>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst GlobalRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => (\r\n            <Layout>\r\n                <Component {...props} />\r\n            </Layout>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default GlobalRoute;\r\n","import {\r\n    SET_BLOGS,\r\n    BLOGS_LOADING,\r\n    SET_BLOG\r\n} from \"../actions/index\";\r\n\r\nconst initialState = {\r\n    blogs: [],\r\n    blog: null,\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case BLOGS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: !state.loading\r\n            }\r\n        case SET_BLOGS:\r\n            return {\r\n                ...state,\r\n                blogs: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_BLOG:\r\n            return {\r\n                ...state,\r\n                blog: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport blogReducer from './blogReducer';\r\n\r\nexport default combineReducers({\r\n    blogs: blogReducer,\r\n});","import axios from 'axios';\r\nconst SERVER_URL = 'https://node3197.herokuapp.com';\r\n\r\nfunction get(subUrl) {\r\n    return axios.get(SERVER_URL + subUrl);\r\n}\r\n\r\nexport default { get };","import { all, call, put, actionChannel, take } from 'redux-saga/effects';\r\nimport RequestService from '../../config/requestService';\r\nimport * as types from '../actions/index';\r\n\r\nfunction* fetchBlogs(action) {\r\n    const { page } = action;\r\n    try {\r\n        const result = yield RequestService.get(`/api/v1/blogs?page=${page}`);\r\n        yield put({ type: types.SET_BLOGS, payload: result.data });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport function* blogDetailWatcher() {\r\n    const subChannel = yield actionChannel(types.GET_BLOG);\r\n    while (true) {\r\n        const action = yield take(subChannel);\r\n        yield call(fetchBlog, action);\r\n    }\r\n}\r\n\r\nfunction* fetchBlog(action) {\r\n    const { id } = action;\r\n    try {\r\n        const result = yield RequestService.get(`/api/v1/blogs/detail/${id}`);\r\n        yield put({ type: types.SET_BLOG, payload: result.data.data });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport function* blogWatcher() {\r\n    const subChannel = yield actionChannel(types.GET_BLOGS);\r\n    while (true) {\r\n        const action = yield take(subChannel);\r\n        yield call(fetchBlogs, action);\r\n    }\r\n}\r\n\r\nexport function* blogSaga() {\r\n    yield all([\r\n\r\n    ])\r\n}","import { all } from 'redux-saga/effects';\r\nimport { blogWatcher, blogSaga, blogDetailWatcher } from './blogService';\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        blogSaga(),\r\n        blogWatcher(),\r\n        blogDetailWatcher(),\r\n    ]);\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './redux/reducers/index';\r\nimport rootSaga from './redux/services/index';\r\n\r\nconst initialState = {};\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport Header from './components/layouts/Header';\nimport Sidebar from './components/layouts/Sidebar';\nimport Menu from './components/layouts/Menu';\nimport GlobalRoute from './components/global/GlobalRoute';\nimport { Layout } from 'antd';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// CSS\nimport 'aos/dist/aos.css';\nimport 'antd/dist/antd.css';\nimport './App.scss';\n\nconst App = () => {\n\n    const [collapsed, setCollapsed] = useState(false);\n    const [width, setWidth] = useState(window.innerWidth)\n    const changeCollapsed = () => {\n        setCollapsed(!collapsed);\n    };\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth)\n        }\n        window.addEventListener('resize', handleResize)\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    }, [])\n\n    const showContent = routes => {\n        var result = null;\n        if (routes.length > 0) {\n            result = routes.map((route, index) => {\n                return (\n                    <GlobalRoute\n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.main}\n                        layout={route.layout}\n                    />\n                );\n            });\n        }\n        return <Switch>{result}</Switch>;\n    };\n\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <Layout>\n                    {width > 470 ?\n                        (\n                            <Sidebar collapsed={collapsed} />\n                        ) : (\n                            <Menu />\n                        )\n                    }\n                    <Layout>\n                        <Header onClick={changeCollapsed} collapsed={collapsed} width={width} />\n                        {showContent(routes)}\n                    </Layout>\n                </Layout>\n            </HashRouter>\n        </Provider>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}