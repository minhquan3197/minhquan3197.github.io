{"version":3,"sources":["components/home/Skills.jsx","components/home/Profile.jsx","components/home/Project.jsx","components/home/Experience.jsx","components/home/Home.jsx","redux/actions/index.js","components/blog/Navigation.jsx","redux/actions/categoryActions.js","components/blog/Blog.jsx","redux/actions/blogActions.js","components/blog/Detail.jsx","components/chat/Message.jsx","components/chat/People.jsx","components/chat/Chat.jsx","components/auth/Login.jsx","components/global/GlobalLayout.jsx","routes.js","components/layouts/Header.jsx","components/layouts/Sidebar.jsx","components/layouts/Menu.jsx","components/global/GlobalRoute.jsx","redux/reducers/blogReducer.js","redux/reducers/categoryReducer.js","redux/reducers/index.js","config/requestService.js","redux/services/blogService.js","redux/services/categoryService.js","redux/services/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","Text","Skills","level","style","marginTop","strokeColor","percent","status","Meta","Card","Profile","cover","alt","src","actions","type","key","onClick","window","open","title","description","listData","content","image","Project","itemLayout","size","pagination","pageSize","dataSource","renderItem","item","Item","extra","width","TabPane","Tabs","Experience","defaultActiveKey","tab","Home","xs","sm","md","lg","xl","paddingRight","GET_BLOGS","GET_BLOG","GET_CATEGORIES","SET_BLOGS","SET_BLOG","SET_CATEGORIES","Navigation","props","dispatch","useDispatch","data","categories","useEffect","page","types","mode","map","x","_id","name","connect","state","Blog","useState","category","setCategory","console","log","blogs","skeleton","index","push","paddingBottom","height","avatar","active","getBlogs","products","to","pathname","className","borderRadius","categoryId","moment","createdAt","format","Paragraph","Detail","blog","id","match","params","html","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paddingTop","dangerouslySetInnerHTML","__html","data-content","Message","author","datetime","subtract","fromNow","header","length","People","href","Chat","Login","prefix","color","placeholder","htmlType","Content","Layout","AOS","init","duration","GeneralLayout","data-aos","children","routes","path","exact","main","layout","GlobalLayout","Header","collapsed","background","padding","Sider","SubMenu","Menu","Sidebar","value","setValue","trigger","collapsible","margin","visible","setVisible","border","position","right","placement","closable","onClose","GlobalRoute","Component","component","rest","render","initialState","combineReducers","action","payload","loading","SERVER_URL","get","subUrl","axios","fetchBlogs","blogDetailWatcher","fetchBlog","blogWatcher","blogSaga","RequestService","result","put","response","actionChannel","subChannel","take","call","all","fetchCategories","categoriesWatcher","categorySaga","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","rootReducer","compose","applyMiddleware","run","App","setCollapsed","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","route","showContent","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6e6ee14.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Progress, Typography } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Skills\r\n            </Title>\r\n            <div>\r\n                <Title level={4}>Programming Language</Title>\r\n                <Text>JavaScript</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={75}\r\n                    status=\"active\"\r\n                />\r\n                <Text>TypeScript</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={55}\r\n                    status=\"active\"\r\n                />\r\n                <Text>PHP</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={50}\r\n                    status=\"active\"\r\n                />\r\n                <Text>HTML/CSS</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={30}\r\n                    status=\"active\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Title level={4}>Framework & Library</Title>\r\n                <Text>Nest.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={40}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Laravel</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={76}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Express.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={50}\r\n                    status=\"active\"\r\n                />\r\n                <Text>React.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={43}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Jest.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={20}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Mocha.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={30}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Chai.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={5}\r\n                    status=\"active\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Card, Icon } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <>\r\n            <Card\r\n                cover={\r\n                    <img\r\n                        alt=\"Quân Nguyễn\"\r\n                        src=\"https://res.cloudinary.com/kori/image/upload/v1547055160/me.jpg\"\r\n                    />\r\n                }\r\n                actions={[\r\n                    <Icon\r\n                        type=\"download\"\r\n                        key=\"download\"\r\n                        onClick={() => window.open('https://drive.google.com/open?id=1gji1wPYP3h9WFeWp042qUnFnZSmLJDAy', '_blank')}\r\n                    />,\r\n                ]}\r\n            >\r\n                <Meta title=\"Nguyễn Minh Quân\" />\r\n                <Meta description=\"Node.js Developer\" />\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Typography, List } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst listData = [\r\n    {\r\n        title: 'Plansmart',\r\n        description: 'Back-end Developer',\r\n        content:\r\n            'Scrum methodology, clear and optimize code, Flow analytics, GIT Flow, Beginning AWS Lambda, Build core 40%',\r\n        image:\r\n            'https://res.cloudinary.com/kori/image/upload/v1580148600/projects/plantsmart.png',\r\n    },\r\n    {\r\n        title: 'Thế Giới Thợ',\r\n        description: 'Back-end Developer',\r\n        content: 'Maintain and do new feature, Firebase push notification',\r\n        image:\r\n            'https://res.cloudinary.com/kori/image/upload/v1580148601/projects/thegioitho.png',\r\n    },\r\n];\r\n\r\nconst Project = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Projects\r\n            </Title>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                    pageSize: 3,\r\n                }}\r\n                dataSource={listData}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        key={item.title}\r\n                        extra={<img width={125} alt=\"logo\" src={item.image} />}\r\n                    >\r\n                        <List.Item.Meta\r\n                            title={item.title}\r\n                            description={item.description}\r\n                        />\r\n                        {item.content}\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default Project;\r\n","import React from 'react';\r\nimport { Tabs, Timeline } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\nconst Experience = () => {\r\n    return (\r\n        <>\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Education\" key=\"1\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <b>Ho Chi Minh University of Technology</b>\r\n                            <p>Faculty of Information Technology</p>\r\n                            <p>2016 – 2020</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <b>KhoaPham Training Center</b>\r\n                            <p>Course: MEAN Stack & PHP/Laravel</p>\r\n                            <p>2017 - 2018</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </TabPane>\r\n                <TabPane tab=\"Experience\" key=\"2\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <b>Vitop Media</b>\r\n                            <p>Junior NodeJS Developer</p>\r\n                            <p>9/2019 – 2/2020</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <b>GMV Tech</b>\r\n                            <p>Fresher Laravel Developer</p>\r\n                            <p>7/2018 – 10/2018</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    );\r\n};\r\nexport default Experience;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Skills from './Skills';\r\nimport Profile from './Profile';\r\nimport Project from './Project';\r\nimport Experience from './Experience';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col\r\n                    xs={24}\r\n                    sm={24}\r\n                    md={12}\r\n                    lg={8}\r\n                    xl={4}\r\n                    style={{ paddingRight: 10 }}\r\n                >\r\n                    <div>\r\n                        <Profile />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Skills />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={16} xl={20}>\r\n                    <div>\r\n                        <Experience />\r\n                    </div>\r\n                    <div>\r\n                        <Project />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Home;\r\n","//Actions\r\nexport const GET_BLOGS = 'GET_BLOGS';\r\nexport const GET_BLOG = 'GET_BLOG';\r\n\r\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\r\n//Saga\r\nexport const SET_BLOGS = 'SET_BLOGS';\r\nexport const SET_BLOG = 'SET_BLOG';\r\n\r\nexport const SET_CATEGORIES = 'SET_CATEGORIES';","import React, { useEffect } from 'react';\r\nimport { Menu } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { getCategories } from '../../redux/actions/categoryActions';\r\n\r\nlet Navigation = props => {\r\n    const dispatch = useDispatch();\r\n    const data = props.categories.categories;\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Menu onClick={props.onClick} mode=\"horizontal\">\r\n                {data\r\n                    ? data.map(x => <Menu.Item key={x._id}>{x.name}</Menu.Item>)\r\n                    : null}\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nNavigation.propTypes = {\r\n    categories: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    categories: state.categories,\r\n});\r\n\r\nNavigation = connect(mapStateToProps, null)(Navigation);\r\n\r\nexport default Navigation;\r\n","import * as types from '.';\r\n\r\nexport const getCategories = (page) => ({\r\n    type: types.GET_CATEGORIES, page\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { Typography, Row, Col, Card, Skeleton } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { getBlogs } from '../../redux/actions/blogActions';\r\nimport Navigation from './Navigation';\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nlet Blog = props => {\r\n    const [page] = useState(1);\r\n    const [category, setCategory] = useState(null);\r\n    console.log(category);\r\n    const dispatch = useDispatch();\r\n\r\n    const data = props.blogs.blogs;\r\n\r\n    const skeleton = [];\r\n\r\n    for (let index = 0; index < 8; index++) {\r\n        skeleton.push(\r\n            <Col\r\n                xs={24}\r\n                sm={24}\r\n                md={6}\r\n                lg={6}\r\n                xl={6}\r\n                style={{ paddingRight: 10, paddingBottom: 10 }}\r\n                key={index}\r\n            >\r\n                <Card style={{ height: 345 }}>\r\n                    <Skeleton avatar active>\r\n                        <Meta title=\"Card title\" />\r\n                    </Skeleton>\r\n                </Card>\r\n            </Col>,\r\n        );\r\n    }\r\n\r\n    const handleClickMenu = key => {\r\n        setCategory(key.key);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlogs(page, category));\r\n    }, [page, category, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Title level={2}>Quan Nguyen Blog</Title>\r\n            <Navigation onClick={handleClickMenu} />\r\n            <Row style={{ marginTop: 20 }}>\r\n                {data.products\r\n                    ? data.products.map(data => (\r\n                          <Col\r\n                              xs={24}\r\n                              sm={24}\r\n                              md={6}\r\n                              lg={6}\r\n                              xl={6}\r\n                              style={{ paddingRight: 10, paddingBottom: 10 }}\r\n                              key={data._id}\r\n                          >\r\n                              <Link to={{ pathname: `/blogs/${data._id}` }}>\r\n                                  <Card\r\n                                      className=\"blog-card\"\r\n                                      cover={\r\n                                          <img\r\n                                              alt={data.name}\r\n                                              src={data.image}\r\n                                          />\r\n                                      }\r\n                                      style={{ height: 345, borderRadius: 20 }}\r\n                                  >\r\n                                      <Meta\r\n                                          title={data.name}\r\n                                          description={\r\n                                              'Danh mục ' +\r\n                                              data.categoryId.name +\r\n                                              ' / Ngày tạo ' +\r\n                                              moment(data.createdAt).format(\r\n                                                  'DD-MM-YYYY',\r\n                                              )\r\n                                          }\r\n                                      />\r\n                                  </Card>\r\n                              </Link>\r\n                          </Col>\r\n                      ))\r\n                    : skeleton}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nBlog.propTypes = {\r\n    blogs: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    blogs: state.blogs,\r\n});\r\n\r\nBlog = connect(mapStateToProps, null)(Blog);\r\n\r\nexport default Blog;\r\n","import * as types from '.';\r\n\r\nexport const getBlogs = (page, category) => ({\r\n    type: types.GET_BLOGS, page, category\r\n})\r\n\r\nexport function getBlog(id) {\r\n    return { type: types.GET_BLOG, id }\r\n}","import React, { useEffect } from 'react';\r\nimport { Typography, Row, Col, Skeleton, Button, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { getBlog } from '../../redux/actions/blogActions';\r\nimport { Link } from 'react-router-dom';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nlet Detail = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const data = props.blog.blog;\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlog(props.match.params.id));\r\n    }, [props.match.params.id, dispatch]);\r\n\r\n    const createMarkup = html => {\r\n        return { __html: html };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data ? (\r\n                <>\r\n                    <Title level={2}>{data.name}</Title>\r\n                    <Row>\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                            <div\r\n                                className=\"image-cover\"\r\n                                style={{\r\n                                    backgroundImage: `url(${data.image})`,\r\n                                    backgroundRepeat: 'no-repeat',\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundPosition: 'center',\r\n                                }}\r\n                            ></div>\r\n                            <Paragraph\r\n                                style={{ paddingTop: 50 }}\r\n                                className=\"blog-detail\"\r\n                            >\r\n                                <div\r\n                                    dangerouslySetInnerHTML={createMarkup(\r\n                                        data.content,\r\n                                    )}\r\n                                />\r\n                            </Paragraph>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Skeleton />\r\n            )}\r\n            <hr className=\"hr-text\" data-content=\"END\" />\r\n            <Link to=\"/blogs\">\r\n                <Button className=\"fixed-button\" type=\"primary\">\r\n                    <Icon type=\"left\" />\r\n                    Go back\r\n                </Button>\r\n            </Link>\r\n        </>\r\n    );\r\n};\r\n\r\nDetail.propTypes = {\r\n    blog: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    blog: state.blogs,\r\n});\r\n\r\nDetail = connect(mapStateToProps, null)(Detail);\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { Comment, Tooltip, List } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst Message = () => {\r\n    const data = [\r\n        {\r\n            author: 'Han Solo',\r\n            avatar:\r\n                'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n            content: (\r\n                <p>\r\n                    We supply a series of design principles, practical patterns\r\n                    and high quality design resources (Sketch and Axure), to\r\n                    help people create their product prototypes beautifully and\r\n                    efficiently.\r\n                </p>\r\n            ),\r\n            datetime: (\r\n                <Tooltip\r\n                    title={moment()\r\n                        .subtract(1, 'days')\r\n                        .format('YYYY-MM-DD HH:mm:ss')}\r\n                >\r\n                    <span>\r\n                        {moment()\r\n                            .subtract(1, 'days')\r\n                            .fromNow()}\r\n                    </span>\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            author: 'Han Solo',\r\n            avatar:\r\n                'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n            content: (\r\n                <p>\r\n                    We supply a series of design principles, practical patterns\r\n                    and high quality design resources (Sketch and Axure), to\r\n                    help people create their product prototypes beautifully and\r\n                    efficiently.\r\n                </p>\r\n            ),\r\n            datetime: (\r\n                <Tooltip\r\n                    title={moment()\r\n                        .subtract(2, 'days')\r\n                        .format('YYYY-MM-DD HH:mm:ss')}\r\n                >\r\n                    <span>\r\n                        {moment()\r\n                            .subtract(2, 'days')\r\n                            .fromNow()}\r\n                    </span>\r\n                </Tooltip>\r\n            ),\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <List\r\n                className=\"comment-list\"\r\n                header={`${data.length} replies`}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <li>\r\n                        <Comment\r\n                            actions={item.actions}\r\n                            author={item.author}\r\n                            avatar={item.avatar}\r\n                            content={item.content}\r\n                            datetime={item.datetime}\r\n                        />\r\n                    </li>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default Message;\r\n","import React from 'react';\r\nimport { List, Avatar } from 'antd';\r\n\r\nconst People = () => {\r\n    const data = [\r\n        {\r\n            title: 'Ant Design Title 1',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 2',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 3',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 4',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 4',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 4',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 4',\r\n        },\r\n        {\r\n            title: 'Ant Design Title 4',\r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                            }\r\n                            title={\r\n                                <a href=\"https://ant.design\">{item.title}</a>\r\n                            }\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default People;\r\n","import React from 'react';\r\nimport { Row, Col, Typography } from 'antd';\r\nimport Message from './Message';\r\nimport People from './People';\r\nconst { Title } = Typography;\r\n\r\nconst Chat = () => {\r\n    return (\r\n        <>\r\n            <Title level={2}>Chat App</Title>\r\n            <Row>\r\n                <Col\r\n                    xs={24}\r\n                    sm={24}\r\n                    md={12}\r\n                    lg={8}\r\n                    xl={4}\r\n                    style={{ paddingRight: 10 }}\r\n                >\r\n                    <div>\r\n                        <People />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={16} xl={20}>\r\n                    <div>\r\n                        <Message />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n            <Form className=\"login-form\">\r\n                <Form.Item>\r\n                    <Input\r\n                        prefix={\r\n                            <Icon\r\n                                type=\"user\"\r\n                                style={{ color: 'rgba(0,0,0,.25)' }}\r\n                            />\r\n                        }\r\n                        placeholder=\"Username\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        prefix={\r\n                            <Icon\r\n                                type=\"lock\"\r\n                                style={{ color: 'rgba(0,0,0,.25)' }}\r\n                            />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"login-form-button\"\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\nexport default Login;\r\n","import React from 'react';\r\nimport AOS from 'aos';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout;\r\nAOS.init({\r\n    duration: 1000,\r\n});\r\n\r\nconst GeneralLayout = props => {\r\n    return (\r\n        <>\r\n            <Content className=\"content\" data-aos=\"fade-left\">\r\n                {props.children}\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeneralLayout;\r\n","import Home from './components/home/Home';\r\nimport Blog from './components/blog/Blog';\r\nimport Detail from './components/blog/Detail';\r\nimport Chat from './components/chat/Chat';\r\nimport Login from './components/auth/Login';\r\n// Layout\r\nimport GlobalLayout from './components/global/GlobalLayout';\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: Home,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/blogs\",\r\n        exact: true,\r\n        main: Blog,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/blogs/:id\",\r\n        exact: true,\r\n        main: Detail,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/chat\",\r\n        exact: true,\r\n        main: Chat,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        exact: true,\r\n        main: Login,\r\n        layout: GlobalLayout,\r\n    },\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { Layout, Icon } from 'antd';\r\n\r\nconst Header = ({ onClick, collapsed, width }) => {\r\n    return (\r\n        <>\r\n            <Layout.Header style={{ background: '#fff', padding: 0 }}>\r\n                {width > 470 ? (\r\n                    <Icon\r\n                        className=\"trigger\"\r\n                        type={collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                        onClick={onClick}\r\n                    />\r\n                ) : null}\r\n            </Layout.Header>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst Sidebar = ({ collapsed }) => {\r\n    const [value, setValue] = useState(true);\r\n    useEffect(() => {\r\n        setValue(collapsed);\r\n    }, [collapsed]);\r\n\r\n    return (\r\n        <>\r\n            <Sider trigger={null} collapsible collapsed={value}>\r\n                <div className=\"logo\">\r\n                    {value ? (\r\n                        <p className=\"logo__text\">K0r1</p>\r\n                    ) : (\r\n                        <p className=\"logo__text\">Quân Nguyễn</p>\r\n                    )}\r\n                </div>\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    style={{\r\n                        borderRadius: 20,\r\n                        width: '90%',\r\n                        margin: 'auto',\r\n                    }}\r\n                >\r\n                    <SubMenu\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"home\" />\r\n                                <span>Home</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"idcard\" />\r\n                                Profile\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"appstore\" />\r\n                                <span>Project</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item>\r\n                            <Link to=\"/blogs\">\r\n                                <Icon type=\"read\" />\r\n                                Blogs\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Link to=\"/chat\">\r\n                                <Icon type=\"message\" />\r\n                                Chat App\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n        </>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = () => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={showDrawer}\r\n                style={{\r\n                    background: '#001529',\r\n                    border: 'none',\r\n                    position: 'absolute',\r\n                    right: 0,\r\n                    width: 50,\r\n                }}\r\n            >\r\n                <Icon type=\"menu\" />\r\n            </Button>\r\n            <Drawer\r\n                title=\"Menu\"\r\n                placement=\"top\"\r\n                closable={false}\r\n                onClose={onClose}\r\n                visible={visible}\r\n            >\r\n                <p>\r\n                    <Link to=\"/\">Profile</Link>\r\n                </p>\r\n                <p>\r\n                    <Link to=\"/blogs\">Blogs</Link>\r\n                </p>\r\n                <p>\r\n                    <Link to=\"/chat\">Chat</Link>\r\n                </p>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst GlobalRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => (\r\n            <Layout>\r\n                <Component {...props} />\r\n            </Layout>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default GlobalRoute;\r\n","import {\r\n    SET_BLOGS,\r\n    SET_BLOG\r\n} from \"../actions/index\";\r\n\r\nconst initialState = {\r\n    blogs: [],\r\n    blog: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_BLOGS:\r\n            return {\r\n                ...state,\r\n                blogs: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_BLOG:\r\n            return {\r\n                ...state,\r\n                blog: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_CATEGORIES,\r\n} from \"../actions/index\";\r\n\r\nconst initialState = {\r\n    categories: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport blogReducer from './blogReducer';\r\nimport categoryReducer from './categoryReducer';\r\n\r\nexport default combineReducers({\r\n    blogs: blogReducer,\r\n    categories: categoryReducer,\r\n});","import axios from 'axios';\r\nconst SERVER_URL = 'https://node3197.herokuapp.com';\r\n\r\nfunction get(subUrl) {\r\n    return axios.get(SERVER_URL + subUrl);\r\n}\r\n\r\nexport default { get };","import { all, call, put, actionChannel, take } from 'redux-saga/effects';\r\nimport RequestService from '../../config/requestService';\r\nimport * as types from '../actions/index';\r\n\r\nfunction* fetchBlogs(action) {\r\n    const { page, category } = action;\r\n    try {\r\n        const result = yield RequestService.get(`/api/v1/blogs?page=${page}&category=${category}`);\r\n        yield put({ type: types.SET_BLOGS, payload: result.data.data });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport function* blogDetailWatcher() {\r\n    const subChannel = yield actionChannel(types.GET_BLOG);\r\n    while (true) {\r\n        const action = yield take(subChannel);\r\n        yield call(fetchBlog, action);\r\n    }\r\n}\r\n\r\nfunction* fetchBlog(action) {\r\n    const { id } = action;\r\n    try {\r\n        const result = yield RequestService.get(`/api/v1/blogs/detail/${id}`);\r\n        yield put({ type: types.SET_BLOG, payload: result.data.data });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport function* blogWatcher() {\r\n    const subChannel = yield actionChannel(types.GET_BLOGS);\r\n    while (true) {\r\n        const action = yield take(subChannel);\r\n        yield call(fetchBlogs, action);\r\n    }\r\n}\r\n\r\nexport function* blogSaga() {\r\n    yield all([\r\n\r\n    ])\r\n}","import { all, call, put, actionChannel, take } from 'redux-saga/effects';\r\nimport RequestService from '../../config/requestService';\r\nimport * as types from '../actions/index';\r\n\r\nfunction* fetchCategories() {\r\n    try {\r\n        const result = yield RequestService.get(`/api/v1/categories`);\r\n        yield put({ type: types.SET_CATEGORIES, payload: result.data.data });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n}\r\n\r\nexport function* categoriesWatcher() {\r\n    const subChannel = yield actionChannel(types.GET_CATEGORIES);\r\n    while (true) {\r\n        const action = yield take(subChannel);\r\n        yield call(fetchCategories, action);\r\n    }\r\n}\r\n\r\nexport function* categorySaga() {\r\n    yield all([\r\n\r\n    ])\r\n}","import { all } from 'redux-saga/effects';\r\nimport { blogWatcher, blogSaga, blogDetailWatcher } from './blogService';\r\nimport { categoriesWatcher, categorySaga } from './categoryService';\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        blogSaga(),\r\n        blogWatcher(),\r\n        blogDetailWatcher(),\r\n        categorySaga(),\r\n        categoriesWatcher(),\r\n    ]);\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './redux/reducers/index';\r\nimport rootSaga from './redux/services/index';\r\n\r\nconst initialState = {};\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport Header from './components/layouts/Header';\nimport Sidebar from './components/layouts/Sidebar';\nimport Menu from './components/layouts/Menu';\nimport GlobalRoute from './components/global/GlobalRoute';\nimport { Layout } from 'antd';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// CSS\nimport 'aos/dist/aos.css';\nimport 'antd/dist/antd.css';\nimport './App.scss';\n\nconst App = () => {\n\n    const [collapsed, setCollapsed] = useState(false);\n    const [width, setWidth] = useState(window.innerWidth)\n    const changeCollapsed = () => {\n        setCollapsed(!collapsed);\n    };\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth)\n        }\n        window.addEventListener('resize', handleResize)\n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    }, [])\n\n    const showContent = routes => {\n        var result = null;\n        if (routes.length > 0) {\n            result = routes.map((route, index) => {\n                return (\n                    <GlobalRoute\n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.main}\n                        layout={route.layout}\n                    />\n                );\n            });\n        }\n        return <Switch>{result}</Switch>;\n    };\n\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <Layout>\n                    {width > 470 ?\n                        (\n                            <Sidebar collapsed={collapsed} />\n                        ) : (\n                            <Menu />\n                        )\n                    }\n                    <Layout>\n                        <Header onClick={changeCollapsed} collapsed={collapsed} width={width} />\n                        {showContent(routes)}\n                    </Layout>\n                </Layout>\n            </HashRouter>\n        </Provider>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}