{"version":3,"sources":["components/home/Skills.jsx","components/home/Profile.jsx","components/home/Project.jsx","components/home/Experience.jsx","components/home/Home.jsx","components/blog/Blog.jsx","components/global/GlobalLayout.jsx","routes.js","components/layouts/Header.jsx","components/layouts/Sidebar.jsx","components/global/GlobalRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","Text","Skills","level","style","marginTop","strokeColor","percent","status","Meta","Card","Profile","cover","alt","src","title","description","listData","content","image","Project","itemLayout","size","pagination","pageSize","dataSource","renderItem","item","Item","key","extra","width","TabPane","Tabs","Experience","defaultActiveKey","tab","Home","xs","sm","md","lg","xl","paddingRight","Blog","Content","Layout","AOS","init","duration","GeneralLayout","props","className","data-aos","children","routes","path","exact","main","layout","GlobalLayout","Header","onClick","collapsed","background","padding","type","Sider","SubMenu","Menu","Sidebar","useState","value","setValue","useEffect","trigger","collapsible","mode","borderRadius","margin","to","GlobalRoute","Component","component","rest","render","App","setCollapsed","result","length","map","route","index","showContent","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.884717c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Progress, Typography } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Skills\r\n            </Title>\r\n            <div>\r\n                <Title level={4}>Programming Language</Title>\r\n                <Text>JavaScript</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={75}\r\n                    status=\"active\"\r\n                />\r\n                <Text>TypeScript</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={55}\r\n                    status=\"active\"\r\n                />\r\n                <Text>PHP</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={50}\r\n                    status=\"active\"\r\n                />\r\n                <Text>HTML/CSS</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={30}\r\n                    status=\"active\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Title level={4}>Framework & Library</Title>\r\n                <Text>Nest.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={40}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Laravel</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={76}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Express.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={50}\r\n                    status=\"active\"\r\n                />\r\n                <Text>React.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={43}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Jest.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={20}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Mocha.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={30}\r\n                    status=\"active\"\r\n                />\r\n                <Text>Chai.js</Text>\r\n                <Progress\r\n                    strokeColor={{\r\n                        '0%': '#108ee9',\r\n                        '100%': '#87d068',\r\n                    }}\r\n                    percent={5}\r\n                    status=\"active\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\nconst Profile = () => {\r\n    return (\r\n        <>\r\n            <Card\r\n                cover={\r\n                    <img\r\n                        alt=\"Quân Nguyễn\"\r\n                        src=\"https://res.cloudinary.com/kori/image/upload/v1547055160/me.jpg\"\r\n                    />\r\n                }\r\n            >\r\n                <Meta title=\"Nguyễn Minh Quân\" />\r\n                <Meta description=\"Node.js Developer\" />\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Typography, List } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst listData = [\r\n    {\r\n        title: 'Plansmart',\r\n        description: 'Back-end Developer',\r\n        content:\r\n            'Scrum methodology, clear and optimize code, Flow analytics, GIT Flow, Beginning AWS Lambda, Build core 40%',\r\n        image:\r\n            'https://res.cloudinary.com/kori/image/upload/v1580148600/projects/plantsmart.png',\r\n    },\r\n    {\r\n        title: 'Thế Giới Thợ',\r\n        description: 'Back-end Developer',\r\n        content: 'Maintain and do new feature, Firebase push notification',\r\n        image:\r\n            'https://res.cloudinary.com/kori/image/upload/v1580148601/projects/thegioitho.png',\r\n    },\r\n];\r\n\r\nconst Project = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Projects\r\n            </Title>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                    pageSize: 3,\r\n                }}\r\n                dataSource={listData}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        key={item.title}\r\n                        extra={<img width={125} alt=\"logo\" src={item.image} />}\r\n                    >\r\n                        <List.Item.Meta\r\n                            title={item.title}\r\n                            description={item.description}\r\n                        />\r\n                        {item.content}\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default Project;\r\n","import React from 'react';\r\nimport { Tabs, Timeline } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\nconst Experience = () => {\r\n    return (\r\n        <>\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Education\" key=\"1\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <b>Ho Chi Minh University of Technology</b>\r\n                            <p>Faculty of Information Technology</p>\r\n                            <p>2016 – 2020</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <b>KhoaPham Training Center</b>\r\n                            <p>Course: MEAN Stack & PHP/Laravel</p>\r\n                            <p>2017 - 2018</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </TabPane>\r\n                <TabPane tab=\"Experience\" key=\"2\">\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <b>Vitop Media</b>\r\n                            <p>Junior NodeJS Developer</p>\r\n                            <p>9/2019 – 2/2020</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                            <b>GMV Tech</b>\r\n                            <p>Fresher Laravel Developer</p>\r\n                            <p>7/2018 – 10/2018</p>\r\n                        </Timeline.Item>\r\n                    </Timeline>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    );\r\n};\r\nexport default Experience;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Skills from './Skills';\r\nimport Profile from './Profile';\r\nimport Project from './Project';\r\nimport Experience from './Experience';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col\r\n                    xs={24}\r\n                    sm={24}\r\n                    md={12}\r\n                    lg={8}\r\n                    xl={4}\r\n                    style={{ paddingRight: 10 }}\r\n                >\r\n                    <div>\r\n                        <Profile />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Skills />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={16} xl={20}>\r\n                    <div>\r\n                        <Experience />\r\n                    </div>\r\n                    <div>\r\n                        <Project />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <>\r\n            <h1>Hello</h1>\r\n        </>\r\n    );\r\n};\r\nexport default Blog;\r\n","import React from 'react';\r\nimport AOS from 'aos';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout;\r\nAOS.init({\r\n    duration: 1000,\r\n});\r\n\r\nconst GeneralLayout = props => {\r\n    return (\r\n        <>\r\n            <Content className=\"content\" data-aos=\"fade-left\">\r\n                {props.children}\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeneralLayout;\r\n","import Home from './components/home/Home';\r\nimport Blog from './components/blog/Blog';\r\n// Layout\r\nimport GlobalLayout from './components/global/GlobalLayout';\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: Home,\r\n        layout: GlobalLayout,\r\n    },\r\n    {\r\n        path: \"/blogs\",\r\n        exact: true,\r\n        main: Blog,\r\n        layout: GlobalLayout,\r\n    }\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { Layout, Icon } from 'antd';\r\n\r\nconst Header = ({ onClick, collapsed }) => {\r\n    return (\r\n        <>\r\n            <Layout.Header style={{ background: '#fff', padding: 0 }}>\r\n                <Icon\r\n                    className=\"trigger\"\r\n                    type={collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                    onClick={onClick}\r\n                />\r\n            </Layout.Header>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst Sidebar = ({ collapsed }) => {\r\n    const [value, setValue] = useState(true);\r\n    useEffect(() => {\r\n        setValue(collapsed);\r\n    }, [collapsed]);\r\n\r\n    return (\r\n        <>\r\n            <Sider trigger={null} collapsible collapsed={value}>\r\n                <div className=\"logo\">\r\n                    {value ? (\r\n                        <p className=\"logo__text\">K0r1</p>\r\n                    ) : (\r\n                        <p className=\"logo__text\">Quân Nguyễn</p>\r\n                    )}\r\n                </div>\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    style={{\r\n                        borderRadius: 20,\r\n                        width: '90%',\r\n                        margin: 'auto',\r\n                    }}\r\n                >\r\n                    <SubMenu\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"home\" />\r\n                                <span>Home</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"idcard\" />\r\n                                Profile\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Link to=\"/blogs\">\r\n                                <Icon type=\"read\" />\r\n                                Blogs\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"appstore\" />\r\n                                <span>Project</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item>\r\n                            <Link to=\"/\">\r\n                                <Icon type=\"message\" />\r\n                                Chat App\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n        </>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst GlobalRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => (\r\n            <Layout>\r\n                <Component {...props} />\r\n            </Layout>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default GlobalRoute;\r\n","import React, { useState } from 'react';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport Header from './components/layouts/Header';\nimport Sidebar from './components/layouts/Sidebar';\nimport GlobalRoute from './components/global/GlobalRoute';\nimport { Layout } from 'antd';\n\n// CSS\nimport 'aos/dist/aos.css';\nimport 'antd/dist/antd.css';\nimport './App.scss';\n\nconst App = () => {\n\n    const [collapsed, setCollapsed] = useState(false);\n\n    const changeCollapsed = () => {\n        setCollapsed(!collapsed);\n    };\n\n    const showContent = routes => {\n        var result = null;\n        if (routes.length > 0) {\n            result = routes.map((route, index) => {\n                return (\n                    <GlobalRoute\n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.main}\n                        layout={route.layout}\n                    />\n                );\n            });\n        }\n        return <Switch>{result}</Switch>;\n    };\n\n    return (\n        <HashRouter>\n            <Layout>\n                <Sidebar collapsed={collapsed} />\n                <Layout>\n                    <Header onClick={changeCollapsed} collapsed={collapsed} />\n                    {showContent(routes)}\n                </Layout>\n            </Layout>\n        </HashRouter>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}