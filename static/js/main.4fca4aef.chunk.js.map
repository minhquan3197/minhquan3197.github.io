{"version":3,"sources":["components/Skills.jsx","components/Profile.jsx","components/Project.jsx","components/Experience.jsx","views/Home.jsx","global/GlobalLayout.jsx","routes.js","global/GlobalRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","Text","Skills","level","style","marginTop","className","xs","sm","md","lg","xl","skills","programming","map","skill","key","id","name","frontend","backend","database","devops","Meta","Card","Profile","cover","alt","src","actions","type","onClick","window","open","title","description","data","listData","reverse","Project","itemLayout","size","pagination","pageSize","dataSource","renderItem","item","Item","content","dataExperiences","experiences","dataEducations","educations","TabPane","Tabs","Experience","defaultActiveKey","tab","position","year","width","image","Home","paddingRight","Content","Layout","AOS","init","duration","routes","path","exact","main","layout","props","data-aos","children","GlobalRoute","Component","component","rest","render","App","result","length","route","index","showContent","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fca4aef.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Typography, Row, Col } from 'antd';\r\nimport skills from '../data/skills.json';\r\nimport './index.scss';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Skills\r\n            </Title>\r\n            <Row>\r\n                <Col className=\"mt-10\" xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                    <Title level={4}>Programming Language</Title>\r\n                    {skills.programming.map((skill) => (\r\n                        <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                            <div key={skill.id}>\r\n                                <Text>{skill.name}</Text>\r\n                            </div>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col className=\"mt-10\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Title level={4}>Front-end</Title>\r\n                    {skills.frontend.map((skill) => (\r\n                        <div key={skill.id}>\r\n                            <Text>{skill.name}</Text>\r\n                        </div>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"mt-10\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Title level={4}>Back-end</Title>\r\n                    {skills.backend.map((skill) => (\r\n                        <div key={skill.id}>\r\n                            <Text>{skill.name}</Text>\r\n                        </div>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"mt-10\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Title level={4}>Database</Title>\r\n                    {skills.database.map((skill) => (\r\n                        <div key={skill.id}>\r\n                            <Text>{skill.name}</Text>\r\n                        </div>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"mt-10\" xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Title level={4}>Devops</Title>\r\n                    {skills.devops.map((skill) => (\r\n                        <div key={skill.id}>\r\n                            <Text>{skill.name}</Text>\r\n                        </div>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Card, Icon } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <>\r\n            <Card\r\n                cover={\r\n                    <img\r\n                        alt=\"Quân Nguyễn\"\r\n                        src=\"https://res.cloudinary.com/kori/image/upload/v1547055160/me.jpg\"\r\n                    />\r\n                }\r\n                actions={[\r\n                    <Icon\r\n                        type=\"download\"\r\n                        key=\"download\"\r\n                        onClick={() =>\r\n                            window.open(\r\n                                'https://drive.google.com/open?id=1gji1wPYP3h9WFeWp042qUnFnZSmLJDAy',\r\n                                '_blank',\r\n                            )\r\n                        }\r\n                    />,\r\n                ]}\r\n            >\r\n                <Meta title=\"Nguyễn Minh Quân\" />\r\n                <Meta description=\"Back-end Developer\" />\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Typography, List } from 'antd';\r\nimport listData from '../data/projects.json';\r\nimport './index.scss';\r\n\r\nconst { Title } = Typography;\r\nconst data = listData.reverse();\r\n\r\nconst Project = () => {\r\n    return (\r\n        <>\r\n            <Title level={2} style={{ marginTop: 10 }}>\r\n                Projects\r\n            </Title>\r\n            <List\r\n                itemLayout=\"vertical\"\r\n                size=\"large\"\r\n                pagination={{\r\n                    pageSize: 3,\r\n                }}\r\n                dataSource={data}\r\n                renderItem={(item) => (\r\n                    <List.Item key={item.title}>\r\n                        <List.Item.Meta title={item.title} description={item.description} />\r\n                        {item.content}\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default Project;\r\n","import React from 'react';\r\nimport { Tabs, Row, Col, Timeline } from 'antd';\r\nimport experiences from '../data/experience.json';\r\nimport educations from '../data/education.json';\r\n\r\nconst dataExperiences = experiences.reverse();\r\nconst dataEducations = educations.reverse();\r\nconst { TabPane } = Tabs;\r\nconst Experience = () => {\r\n    return (\r\n        <>\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Experience\" key=\"1\">\r\n                    <Timeline>\r\n                        {dataExperiences.map(data => (\r\n                            <Timeline.Item key={data.id}>\r\n                                <Row>\r\n                                    <Col xs={24} sm={24} md={4} lg={4} xl={4}>\r\n                                        <b>{data.name}</b>\r\n                                        <p>{data.position}</p>\r\n                                        <p>{data.year}</p>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={20}\r\n                                        lg={20}\r\n                                        xl={20}\r\n                                    >\r\n                                        <img\r\n                                            style={{ width: '75px' }}\r\n                                            src={data.image}\r\n                                            alt={data.name}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Timeline.Item>\r\n                        ))}\r\n                    </Timeline>\r\n                </TabPane>\r\n                <TabPane tab=\"Education\" key=\"2\">\r\n                    <Timeline>\r\n                        {dataEducations.map(data => (\r\n                            <Timeline.Item key={data.id}>\r\n                                <b>{data.name}</b>\r\n                                <p>{data.position}</p>\r\n                                <p>{data.year}</p>\r\n                            </Timeline.Item>\r\n                        ))}\r\n                    </Timeline>\r\n                </TabPane>\r\n            </Tabs>\r\n        </>\r\n    );\r\n};\r\nexport default Experience;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Skills from '../components/Skills';\r\nimport Profile from '../components/Profile';\r\nimport Project from '../components/Project';\r\nimport Experience from '../components/Experience';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={12} lg={8} xl={4} style={{ paddingRight: 10 }}>\r\n                    <div>\r\n                        <Profile />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Skills />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={16} xl={20}>\r\n                    <div>\r\n                        <Experience />\r\n                    </div>\r\n                    <div>\r\n                        <Project />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport AOS from 'aos';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout;\r\nAOS.init({\r\n    duration: 1000,\r\n});\r\n\r\nconst GeneralLayout = props => {\r\n    return (\r\n        <>\r\n            <Content className=\"content\" data-aos=\"fade-left\">\r\n                {props.children}\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeneralLayout;\r\n","import Home from './views/Home';\r\n// Layout\r\nimport GlobalLayout from './global/GlobalLayout';\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: Home,\r\n        layout: GlobalLayout,\r\n    },\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst GlobalRoute = ({ component: Component, layout: Layout, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => (\r\n            <Layout>\r\n                <Component {...props} />\r\n            </Layout>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default GlobalRoute;\r\n","import React from 'react';\r\nimport { Switch, HashRouter } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport GlobalRoute from './global/GlobalRoute';\r\nimport { Layout } from 'antd';\r\n// CSS\r\nimport 'aos/dist/aos.css';\r\nimport 'antd/dist/antd.css';\r\nimport './global/index.scss';\r\n\r\nconst App = () => {\r\n    const showContent = routes => {\r\n        var result = null;\r\n        if (routes.length > 0) {\r\n            result = routes.map((route, index) => {\r\n                return (\r\n                    <GlobalRoute\r\n                        key={index}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.main}\r\n                        layout={route.layout}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n        return <Switch>{result}</Switch>;\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <HashRouter>\r\n                {showContent(routes)}\r\n            </HashRouter>\r\n        </Layout>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}